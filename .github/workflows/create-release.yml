on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - '*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Create Release

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    strategy:
        matrix:
          # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
          goos: [linux, windows, darwin]
          goarch: ["386", amd64, arm64]
          exclude:
            - goarch: "386"
              goos: darwin
            - goarch: arm64
              goos: windows
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body_path: Changelog.md
        draft: false
        prerelease: false
    - name: "Upload assets"
      uses: wangyoucao577/go-release-action@v1
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        goversion: "https://dl.google.com/go/go1.20.5.linux-amd64.tar.gz"
        project_path: "."
        binary_name: "sleep-on-lan"
        extra_files: script/win-service-install.ps1 script/win-service-uninstall.ps1 README.md